[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "aut"
description = "Python command line interface for interacting with Autonity nodes."
readme = "README.md"
license = "MIT"
keywords = ["autonity", "web3", "rpc", "cli"]
authors = [
    { name = "Robert Sams", email = "rs@clearmatics.com" },
    { name = "Duncan Tebbs", email = "duncan.tebbs@clearmatics.com" },
]
dynamic = ["version"]
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 4 - Beta",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11"
]
dependencies = [
    "autonity==1.0.0",
    # "autonity @ {root:uri}/../autonity.py", # for local development only
    "click==8.1.3",
]

## this settings is to enable linking the autonity library directly from the autonity repo
# [tool.hatch.metadata]
# allow-direct-references = true
##
[project.urls]
Homepage = "https://github.com/autonity/aut"
Source = "https://github.com/autonity/aut"
Issues = "https://github.com/autonity/aut/issues"

[project.scripts]
aut = "aut.__main__:aut"

[tool.hatch.version]
path = "aut/__version__.py"

[tool.hatch.build]
include = ["aut/**"]

[tool.hatch.envs.default]
dependencies = [
    "mypy==1.2.0",
    "pylint==2.17.4",
    "flake8==6.0.0",
    "black==23.3.0",
    "coverage==7.2.5",
    "pyclean==2.7.0"
]

[tool.hatch.envs.default.scripts]
test = "python -m unittest discover {args:tests}"
test-cov = "coverage run -m unittest discover {args:tests}"
cov-report = [
    "- coverage combine",
    'coverage report --show-missing --omit="tests/*"',
]
cov = ["test-cov", "cov-report"]
lint = [
    "black --check aut tests",
    "mypy aut tests",
    "pylint aut tests",
    "flake8 aut tests",
]
clean = ["hatch clean", "pyclean ."]
format = ["black aut tests"]

## Linters
[tool.pylint]
disable = ["fixme", "wrong-import-order", "too-few-public-methods"]
# what's the issue with single-name vars?!
good-names = ["f", "fn", "h", "kf", "p", "s", "tx", "w3", "x", "tx"]
output-format = "text"
min-similarity-lines = 9

[tool.mypy]
strict_optional = true
disallow_incomplete_defs = true
check_untyped_defs = true
scripts_are_modules = true
disallow_untyped_defs = true
disallow_untyped_calls = true
exclude = "tests/archive"

[tool.black]
